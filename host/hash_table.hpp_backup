#include <atomic>

#include "common.h"
using namespace std;

const int CPU_HASH_TABLE_SIZE = BATCH_SIZE * 5;

atomic<int> key2offset[CPU_HASH_TABLE_SIZE];

template <typename Key>
inline int ht_insert(atomic<Key>* ht, Key k) {
    while (!ht[pos].compare_exchange_strong(0, k)) {
        pos ++;
    }
    return pos;
}

template <typename Key>
inline T ht_get(atomic<T>* ht, int pos) {
    

}